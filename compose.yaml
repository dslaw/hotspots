services:
  cache:
    image: redis:7.4.1-bookworm
    ports:
      - "8379:6379"
    command: redis-server --save 60 1 --loglevel warning

  broker:
    image: apache/kafka-native:3.9.0
    ports:
      - "9092:9092"
    environment:
      # Configure listeners for both docker and host.
      KAFKA_LISTENERS: CONTROLLER://localhost:9091,HOST://0.0.0.0:9092,DOCKER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: HOST://localhost:9092,DOCKER://broker:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,HOST:PLAINTEXT

      # KRaft mode.
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9091

      # Listener to use for broker-to-broker communication.
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER

      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "ingest:4:1"

  aggregates-db:
    image: postgres:17.4-alpine
    environment:
      POSTGRES_DB: aggregates
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: app_user
    ports:
      - "8432:5432"
    volumes:
      - ./db:/docker-entrypoint-initdb.d

  ingest-worker:
    build:
      context: ingest
      dockerfile: Dockerfile
    env_file: .env-ingest
    depends_on:
      - cache
      - broker
    volumes:
      - ./data:/worker/data
      - ./schemas:/worker/schemas

  raw-consumer:
    build:
      context: consume
      dockerfile: Dockerfile
    env_file: .env-consume
    environment:
      CONSUMER_TYPE: "raw"
    depends_on:
      - broker

  aggregate-consumer:
    build:
      context: consume
      dockerfile: Dockerfile
    env_file: .env-consume
    environment:
      CONSUMER_TYPE: "aggregate"
    depends_on:
      - broker
